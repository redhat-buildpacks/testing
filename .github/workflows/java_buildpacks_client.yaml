name: "Test using Java Buildpacks client"
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
    paths-ignore:
      - '*.adoc'        # Ignores .adoc files at the root of the repository
      - '*.md'          # Ignores .md files at the root of the repository
      - '**/*.md'       # Ignores .md files within subdirectories
jobs:
  configure-matrix:
    uses: ./.github/workflows/configure.yaml

  linux-jvm-build:
    name: Linux - JVM build
    needs: configure-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.configure-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
      - name: Install JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true

      - name: Remove podman
        run: |
          echo "Remove podman as docker is installed by default within the ubuntu image"
          sudo systemctl stop podman.socket
          sudo systemctl stop podman

          sudo apt-get remove podman

      - name: Log in to GitHub Container Registry
        # Authenticate with GHCR to securely push images
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Try to push an image to myregistry
        run: |
          echo "Github repository: ${{ github.repository }}"

          docker pull alpine

          docker tag alpine ghcr.io/${{ github.repository }}/alpine:latest
          docker push ghcr.io/${{ github.repository }}/alpine:latest

      - name: "Test the Java Buildpacks Sample using as builder image: ${{ matrix.builder-image }}"
        run: |
          RUNNER_IP=${{ steps.ip.outputs.ipv4 }}
          CONTAINER_NAME=quarkus-jvm-hello
          CONTAINER_IMAGE=ghcr.io/${{ github.repository }}/$CONTAINER_NAME:1.0

          DOCKER_HOST=unix:///var/run/docker.sock

          SAMPLES_DIR=$(pwd)/.github/samples
          QUARKUS_HELLO_DIR=$(pwd)/quarkus-quickstarts/getting-started

          # Checkout the java project to be build
          git clone --depth 1 --branch ${{ matrix.quarkus_version }} https://github.com/quarkusio/quarkus-quickstarts.git

          # Compile the BuildMe sample
          cd $SAMPLES_DIR/build-me
          mvn -B compile

          # Set the mandatory env variables
          export PROJECT_PATH=$QUARKUS_HELLO_DIR
          export IMAGE_REF=$CONTAINER_IMAGE

          export REGISTRY_SERVER="ghcr.io"
          export REGISTRY_USER=${{ github.actor }}
          export REGISTRY_PASS=${{ secrets.GITHUB_TOKEN }}

          export BP_JVM_VERSION="21"
          export CNB_BUILDER_IMAGE=${{ matrix.builder-image }}

          # Build the image and push it to the container registry
          mvn exec:java

      - name: "Checking the image published"
        run: |
          CONTAINER_NAME=quarkus-jvm-hello
          CONTAINER_IMAGE=ghcr.io/${{ github.repository }}/$CONTAINER_NAME:1.0
          docker pull $CONTAINER_IMAGE
          docker image inspect $CONTAINER_IMAGE
