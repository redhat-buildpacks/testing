apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: buildpacks
spec:
  params:
    # Deprecated as we cannot set a param to a pipelinerun - workspace - pvc
    #- name: storageClassName
    #  type: string
    #  default: ""
    - name: cnbBuilderImage
      type: string
      default: ""
    - name: gitRepo
      type: string
      default: ""
    - name: cnbLifecycleImage
      type: string
      default: ""
    - name: cnbBuildImage
      type: string
      default: ""
    - name: cnbBuildEnvVars
      type: array
      description: Environment variables to set during _build-time_.
      default: [""]
    - name: cnbRunImage
      type: string
      default: ""
    - name: cnbLogLevel
      type: string
      default: "info"
    - name: cnbExperimentalMode
      type: string
      default: "true"
    - name: AppImage
      type: string
      default: ""
    - name: sourceSubPath
      type: string
      default: "."
  workspaces:
    - name: source-ws
    - name: cache-ws
  tasks:
    - name: fetch-repository
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: source-ws
      params:
        - name: url
          value: $(params.gitRepo)
        - name: deleteExisting
          value: "true"

    - name: buildpacks-extension-check
      params:
        - name: builderImage
          value: $(params.cnbBuilderImage)
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/redhat-buildpacks/templates.git
          - name: revision
            value: main
          - name: pathInRepo
            value: tekton/task/buildpacks-extension-check/01/buildpacks-extension-check.yaml

    - name: buildpacks
      when:
        - input: $(tasks.buildpacks-extension-check.results.extensionLabels)
          operator: in
          values: ["empty"]
      taskRef:
        name: buildpacks-phases
      runAfter:
        - fetch-repository
      workspaces:
        - name: source
          workspace: source-ws
        - name: cache
          workspace: cache-ws
      params:
         - name: APP_IMAGE
           value: $(params.AppImage)
         - name: SOURCE_SUBPATH
           value: $(params.sourceSubPath)
         - name: CNB_BUILDER_IMAGE
           value: $(params.cnbBuilderImage)
         - name: CNB_LIFECYCLE_IMAGE
           value: $(params.cnbLifecycleImage)
         - name: CNB_EXPERIMENTAL_MODE
           value: $(params.cnbExperimentalMode)
         - name: CNB_LOG_LEVEL
           value: $(params.cnbLogLevel)
         - name: CNB_RUN_IMAGE
           value: $(params.cnbRunImage)
         - name: CNB_BUILD_IMAGE
           value: $(params.cnbBuildImage)
         - name: CNB_USER_ID
           value: $(tasks.buildpacks-extension-check.results.uid)
         - name: CNB_GROUP_ID
           value: $(tasks.buildpacks-extension-check.results.gid)
         - name: ENV_VARS
           value: ["$(params.cnbBuildEnvVars)"]

    - name: buildpacks-extension
      when:
        - input: $(tasks.buildpacks-extension-check.results.extensionLabels)
          operator: notin
          values: ["empty"]
      taskRef:
        name: buildpacks-extension-phases
      workspaces:
        - name: source
          workspace: source-ws
        - name: cache
          workspace: cache-ws
      params:
         - name: APP_IMAGE
           value: $(params.AppImage)
         - name: SOURCE_SUBPATH
           value: $(params.sourceSubPath)
         - name: CNB_BUILDER_IMAGE
           value: $(params.cnbBuilderImage)
         - name: CNB_LIFECYCLE_IMAGE
           value: $(params.cnbLifecycleImage)
         - name: CNB_EXPERIMENTAL_MODE
           value: $(params.cnbExperimentalMode)
         - name: CNB_LOG_LEVEL
           value: $(params.cnbLogLevel)
         - name: CNB_RUN_IMAGE
           value: $(params.cnbRunImage)
         - name: CNB_BUILD_IMAGE
           value: $(params.cnbBuildImage)
         - name: CNB_USER_ID
           value: $(tasks.buildpacks-extension-check.results.uid)
         - name: CNB_GROUP_ID
           value: $(tasks.buildpacks-extension-check.results.gid)
         - name: ENV_VARS
           value: ["$(params.cnbBuildEnvVars)"]